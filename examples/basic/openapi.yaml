openapi: 3.1.0
info:
  description: This is my API
  title: My API
  version: 1.0.0
servers:
- description: Main server
  url: https://api.example.com
paths:
  /api/v1/login:
    post:
      description: Logs in a user and returns a token
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMainToken'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
          description: Unprocessable Entity
      summary: Login User
      tags:
      - Authentication
  /api/v1/users/{user_id}:
    get:
      description: Retrieves details of a user by ID
      operationId: getUserDetail
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - "12345"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMainUser'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
      security:
      - bearerAuth: []
      summary: Get User Detail
      tags:
      - Users
components:
  schemas:
    ErrorResponse:
      properties:
        detail:
          examples:
          - Invalid input data
          type: string
        status:
          examples:
          - 400
          type: integer
        title:
          examples:
          - Bad Request
          type: string
      type: object
    FieldError:
      properties:
        field:
          examples:
          - email
          type: string
        message:
          examples:
          - Email is required
          type: string
      type: object
    LoginRequest:
      properties:
        password:
          examples:
          - password123
          type: string
        remember_me:
          examples:
          - true
          type: boolean
        username:
          examples:
          - john_doe
          type: string
      required:
      - username
      - password
      type: object
    ResponseMainToken:
      properties:
        data:
          $ref: '#/components/schemas/Token'
        status:
          examples:
          - 200
          type: integer
      type: object
    ResponseMainUser:
      properties:
        data:
          $ref: '#/components/schemas/User'
        status:
          examples:
          - 200
          type: integer
      type: object
    Token:
      properties:
        access_token:
          examples:
          - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          type: string
        refresh_token:
          examples:
          - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          type: string
      type: object
    User:
      properties:
        email:
          examples:
          - john_doe@example.com
          type: string
        id:
          examples:
          - "12345"
          type: string
        name:
          examples:
          - John Doe
          type: string
        username:
          examples:
          - john_doe
          type: string
      type: object
    ValidationResponse:
      properties:
        detail:
          examples:
          - Input data does not meet validation criteria
          type: string
        errors:
          examples:
          - - field: email
              message: Email is required
          items:
            $ref: '#/components/schemas/FieldError'
          type:
          - array
          - "null"
        status:
          examples:
          - 422
          type: integer
        title:
          examples:
          - Validation Error
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      scheme: Bearer
      type: http
